
--------------------------
Problem: temporary delay on WS, but no data is lost and packets are just
delayed.

Algo: If you have 2 packets in the buffer and receive IDLE, then resend first
packet in buffer, otherwise send next packet

NRF received    WS rec  next    array of pending requests after processing
NRF sent


IDLE            IDLE            []
ack

IDLE            IDLE    READ1   [READ1]
ack

IDLE            IDLE    READ2   [READ1, READ2]
READ1

DATA1
READ2

DATA2
ack

IDLE
ack

IDLE
ack

IDLE
ack

IDLE
ack
                DATA1   READ3   [READ2, READ3] (delayed data)
                DATA2   READ4   [READ3, READ4]
                IDLE    READ3   [READ3, READ4]
                IDLE    READ3   [READ3, READ4]
                IDLE    READ3   [READ3, READ4]
                IDLE    READ3   [READ3, READ4]

IDLE            IDLE    READ3   [READ3, READ4]
READ3

DATA3           DATA3   READ4   [READ4]
READ3

DATA3           DATA3   READ5   [READ4, READ5]  ! DATA3 not in list, just ignore
READ4

DATA4           DATA4   READ6   [READ5, READ6]
READ5

back on track ...




--------------------------
Problem: error in WS, lost packet

Algo: If you have 2 packets in the buffer and receive IDLE, then resend first
packet in buffer, otherwise send next packet

IDLE            IDLE            []
ack

IDLE            IDLE    READ1   [READ1]
ack

IDLE            IDLE    READ2   [READ1, READ2]
READ1

DATA1           X
READ2

DATA2           DATA2   READ3   [READ1, READ3]
ack

IDLE            IDLE    READ1   [READ1, READ3]
READ3

DATA3           DATA3   READ4   [READ1, READ4]
READ1

... all back on track


--------------------------
Problem: error in NRF, lost packet

Algo: If you have 2 packets in the buffer and receive IDLE, then resend first
packet in buffer, otherwise send next packet

IDLE            IDLE            []
ack

IDLE            IDLE    READ1   [READ1]
ack

IDLE            IDLE    READ2   [READ1, READ2]
        X

IDLE            IDLE    READ1   [READ1, READ2]
READ2

DATA2           DATA2   READ3   [READ1, READ3]
READ1

DATA1           DATA1   READ4   [READ3, READ4]
READ3

DATA3           DATA3           [READ4]
READ4

DATA4           DATA4           []
IDLE




--------------------------
Algo: keep 2 addr/count entries, plus a counter how many idles we received

DO NOT IMPLEMENT, TOO COMPLICATED

IDLE            IDLE            x[]
ack

IDLE            IDLE    READ1   0[READ1]        ! start sending: reset idle cnt
ack

IDLE            IDLE    READ2   1[READ1, READ2]
READ1

DATA1      X
READ2

DATA2      x
ack

IDLE       x
ack

IDLE       x
ack

IDLE       x
ack

IDLE            DATA1   READ3   0[READ2, READ3]
ack             DATA2   READ4   0[READ3, READ4]
                IDLE    READ3   1[READ4, READ3]  ! expected DATA3 but got IDLE, so resend READ3
                IDLE    READ3   2[READ3]         ! consecutive idle, restart lowest READ in buffer
                IDLE    READ3   2[READ3]         ! consecutive idle, restart
                IDLE    READ3   2[READ3]         ! consecutive idle, restart

IDLE            IDLE    READ3   2[READ3]         ! consecutive idle, restart
READ3

DATA3           DATA3   READ4   0[READ4]
READ3

DATA3           DATA3   READ5   0[READ4, READ5]  ! DATA3 not in list, just ignore
READ4

DATA4           DATA4   READ6   0[READ5, READ6]
READ5

back on track ...